# Cline AI Working Guidelines - Agentic Data Analysis

## Essential AI Instructions

### 1. Always Read Memory Bank First
**CRITICAL**: Before any work, read ALL memory bank files to understand current project state:
- `memory-bank/activeContext.md` - Current work focus and recent changes
- `memory-bank/progress.md` - What's working and what's built
- `memory-bank/systemPatterns.md` - Architecture and design patterns
- `memory-bank/techContext.md` - Technical stack and implementation details

### 2. Critical Code Patterns (MUST FOLLOW)

#### Token Tracking Integration
```python
# ALWAYS include token tracking in agent calls
global token_callback
token_callback = TokenUsageCallback()
llm_outputs = model.invoke(state, config={"callbacks": [token_callback]})
```

#### Dynamic Dataset Discovery
```python
# NEVER assume dataset names - always use dynamic discovery
available_datasets = [var for var in locals() if var.startswith('dataset_')]
print(f"Found {len(available_datasets)} datasets: {available_datasets}")
```

#### User-Friendly Error Handling
```python
# Always provide contextual error guidance
if "recursion" in error_message.lower():
    st.error("ðŸ”„ Analysis too complex. Try simpler questions.")
# Include technical details in expander for debugging
```

### 3. Development Guidelines

#### When Making Changes:
1. **Test token tracking** - Ensure usage monitoring works
2. **Validate multi-dataset support** - Test with various file combinations  
3. **Check error handling** - Verify user-friendly messages
4. **Update memory bank** - Document significant changes

#### When Adding Features:
1. **Follow established patterns** from memory-bank/systemPatterns.md
2. **Integrate token tracking** from the start
3. **Maintain error recovery** with user guidance
4. **Update relevant memory bank files**

#### When Debugging:
1. **Check Token Usage tab** - Monitor costs and patterns
2. **Use Debug tab** - Review AI reasoning and execution
3. **Verify dataset discovery** - Ensure dynamic naming works
4. **Consult memory bank** - Review known challenges and solutions

### 4. Project-Specific Rules

- **Dataset Naming**: Always use `dataset_0`, `dataset_1`, etc. (never assume specific names)
- **Error Messages**: User-friendly with technical details in expanders
- **Smart Suggestions**: File-type aware recommendations (financial, customer, sales)
- **Recursion Limit**: Set to 25 with intelligent fallback guidance
- **Model Configuration**: Use environment variables for flexibility

### 5. Memory Bank Updates

When user requests "update memory bank":
1. **Review ALL memory bank files** (even if no changes needed)
2. **Focus on activeContext.md and progress.md** for current state
3. **Document new patterns** in systemPatterns.md
4. **Update technical details** in techContext.md

## Quick Reference

**Memory Bank Structure**:
- `activeContext.md` - Current work and recent changes
- `progress.md` - What works, what's built, what's left
- `systemPatterns.md` - Architecture and design patterns  
- `techContext.md` - Technical stack and implementation
- `projectbrief.md` - Core requirements and goals
- `productContext.md` - Why project exists, problems solved

**Key Technologies**: Streamlit, LangGraph, OpenAI API, Plotly, Pandas
**Architecture**: 4-tab UI (Data, Chat, Debug, Token Usage) + Professional AI Agent
**Core Features**: Smart suggestions, token analytics, multi-dataset support, error recovery

This .clinerules file provides essential AI working guidance while the memory-bank/ contains comprehensive project documentation.
